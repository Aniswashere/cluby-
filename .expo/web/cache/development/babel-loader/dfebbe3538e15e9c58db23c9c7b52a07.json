{"ast":null,"code":"import React, { useMemo } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nvar styles = StyleSheet.create({\n  container: {\n    width: 4,\n    height: 4,\n    borderRadius: 2\n  }\n});\n\nfunction Dot(_ref) {\n  var active = _ref.active,\n      color = _ref.color,\n      index = _ref.index,\n      selectedColor = _ref.selectedColor,\n      dotContainerStyle = _ref.dotContainerStyle;\n  var style = useMemo(function () {\n    return {\n      marginLeft: index === 0 ? 0 : 2\n    };\n  }, [index]);\n  return React.createElement(View, {\n    style: [styles.container, style, dotContainerStyle, {\n      backgroundColor: active ? selectedColor : color\n    }]\n  });\n}\n\nexport default Dot;","map":{"version":3,"mappings":"AAAA,OAAOA,KAAP,IAAgBC,OAAhB,QAA+B,OAA/B;;;AAKA,IAAMC,MAAM,GAAGC,UAAU,CAACC,MAAXD,CAAkB;AAC/BE,WAAS,EAAE;AACTC,SAAK,EAAE,CADE;AAETC,UAAM,EAAE,CAFC;AAGTC,gBAAY,EAAE;AAHL;AADoB,CAAlBL,CAAf;;AAaA,SAASM,GAAT,OAMU;AAAA,MALRC,MAKQ,QALRA,MAKQ;AAAA,MAJRC,KAIQ,QAJRA,KAIQ;AAAA,MAHRC,KAGQ,QAHRA,KAGQ;AAAA,MAFRC,aAEQ,QAFRA,aAEQ;AAAA,MADRC,iBACQ,QADRA,iBACQ;AACR,MAAMC,KAAK,GAAGd,OAAO,CAAC;AAAA,WAAO;AAAEe,gBAAU,EAAEJ,KAAK,KAAK,CAAVA,GAAc,CAAdA,GAAkB;AAAhC,KAAP;AAAA,GAAD,EAA8C,CAACA,KAAD,CAA9C,CAArB;AAEA,SACEZ,oBAACiB,IAAD;AACEF,SAAK,EAAE,CACLb,MAAM,CAACG,SADF,EAELU,KAFK,EAGLD,iBAHK,EAIL;AACEI,qBAAe,EAAER,MAAM,GAAGG,aAAH,GAAmBF;AAD5C,KAJK;AADT,IADF;AAYD;;AAED,eAAeF,GAAf","names":["React","useMemo","styles","StyleSheet","create","container","width","height","borderRadius","Dot","active","color","index","selectedColor","dotContainerStyle","style","marginLeft","View","backgroundColor"],"sources":["index.tsx"],"sourcesContent":["import React, { useMemo } from 'react';\nimport { StyleSheet, View } from 'react-native';\n\nimport { DayDot, DotTheme } from '../../types';\n\nconst styles = StyleSheet.create({\n  container: {\n    width: 4,\n    height: 4,\n    borderRadius: 2,\n  },\n});\n\ninterface Props extends DayDot, DotTheme {\n  active: boolean;\n  index: number;\n}\n\nfunction Dot({\n  active,\n  color,\n  index,\n  selectedColor,\n  dotContainerStyle,\n}: Props) {\n  const style = useMemo(() => ({ marginLeft: index === 0 ? 0 : 2 }), [index]);\n\n  return (\n    <View\n      style={[\n        styles.container,\n        style,\n        dotContainerStyle,\n        {\n          backgroundColor: active ? selectedColor : color,\n        },\n      ]}\n    />\n  );\n}\n\nexport default Dot;\n"]},"metadata":{},"sourceType":"module"}