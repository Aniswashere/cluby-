{"ast":null,"code":"import { useMemo } from 'react';\nimport moment from 'moment';\nimport { isValidDate } from \"../utils/date\";\nexport default function useRange(_ref) {\n  var startDate = _ref.startDate,\n      endDate = _ref.endDate,\n      numberOfMonths = _ref.numberOfMonths,\n      firstMonthToRender = _ref.firstMonthToRender;\n  return useMemo(function () {\n    var start;\n    var lastMonth = moment(firstMonthToRender).add(numberOfMonths, 'months').toDate();\n\n    if (startDate && isValidDate(new Date(startDate))) {\n      start = moment(startDate, 'YYYY-MM-DD').toDate();\n\n      if (start > lastMonth) {\n        start = undefined;\n      }\n    }\n\n    var end = endDate && isValidDate(new Date(endDate)) && endDate <= lastMonth ? moment(endDate, 'YYYY-MM-DD').toDate() : undefined;\n    return {\n      start: start,\n      end: end\n    };\n  }, [endDate, firstMonthToRender, numberOfMonths, startDate]);\n}","map":{"version":3,"mappings":"AAAA,SAASA,OAAT,QAAwB,OAAxB;AACA,OAAOC,MAAP,MAAmB,QAAnB;AAEA,SAASC,WAAT;AAaA,eAAe,SAASC,QAAT,OAKG;AAAA,MAJhBC,SAIgB,QAJhBA,SAIgB;AAAA,MAHhBC,OAGgB,QAHhBA,OAGgB;AAAA,MAFhBC,cAEgB,QAFhBA,cAEgB;AAAA,MADhBC,kBACgB,QADhBA,kBACgB;AAChB,SAAOP,OAAO,CAAC,YAAM;AACnB,QAAIQ,KAAJ;AACA,QAAMC,SAAS,GAAGR,MAAM,CAACM,kBAAD,CAANN,CACfS,GADeT,CACXK,cADWL,EACK,QADLA,EAEfU,MAFeV,EAAlB;;AAIA,QAAIG,SAAS,IAAIF,WAAW,CAAC,IAAIU,IAAJ,CAASR,SAAT,CAAD,CAA5B,EAAmD;AACjDI,WAAK,GAAGP,MAAM,CAACG,SAAD,EAAY,YAAZ,CAANH,CAAgCU,MAAhCV,EAARO;;AAEA,UAAIA,KAAK,GAAGC,SAAZ,EAAuB;AACrBD,aAAK,GAAGK,SAARL;AACD;AACF;;AAED,QAAIM,GAAG,GACLT,OAAO,IAAIH,WAAW,CAAC,IAAIU,IAAJ,CAASP,OAAT,CAAD,CAAtBA,IAA6CA,OAAO,IAAII,SAAxDJ,GACIJ,MAAM,CAACI,OAAD,EAAU,YAAV,CAANJ,CAA8BU,MAA9BV,EADJI,GAEIQ,SAHN;AAKA,WAAO;AACLL,WADK,EACLA,KADK;AAELM;AAFK,KAAP;AAnBY,KAuBX,CAACT,OAAD,EAAUE,kBAAV,EAA8BD,cAA9B,EAA8CF,SAA9C,CAvBW,CAAd;AAwBD","names":["useMemo","moment","isValidDate","useRange","startDate","endDate","numberOfMonths","firstMonthToRender","start","lastMonth","add","toDate","Date","undefined","end"],"sources":["use-range.ts"],"sourcesContent":["import { useMemo } from 'react';\nimport moment from 'moment';\n\nimport { isValidDate } from '../utils/date';\nimport { CalendarProps } from '../types';\n\ninterface Input\n  extends Pick<CalendarProps, 'startDate' | 'endDate' | 'numberOfMonths'> {\n  firstMonthToRender: Date;\n}\n\ninterface Result {\n  start?: Date;\n  end?: Date;\n}\n\nexport default function useRange({\n  startDate,\n  endDate,\n  numberOfMonths,\n  firstMonthToRender,\n}: Input): Result {\n  return useMemo(() => {\n    let start: Date | undefined;\n    const lastMonth = moment(firstMonthToRender)\n      .add(numberOfMonths, 'months')\n      .toDate();\n\n    if (startDate && isValidDate(new Date(startDate))) {\n      start = moment(startDate, 'YYYY-MM-DD').toDate();\n\n      if (start > lastMonth) {\n        start = undefined;\n      }\n    }\n\n    let end =\n      endDate && isValidDate(new Date(endDate)) && endDate <= lastMonth\n        ? moment(endDate, 'YYYY-MM-DD').toDate()\n        : undefined;\n\n    return {\n      start,\n      end,\n    };\n  }, [endDate, firstMonthToRender, numberOfMonths, startDate]);\n}\n"]},"metadata":{},"sourceType":"module"}