{"ast":null,"code":"import { addDays, getNumberOfDaysInMonth } from \"../utils/date\";\nimport { changedDate, changeMarkedDays, sameDate } from \"../utils/validations\";\nvar MONDAY_FIRST = [6, 0, 1, 2, 3, 4, 5];\n\nfunction dayShouldBeActive(date, startDate, endDate, firstDayOfMonth, lastDayOfMonth) {\n  if (date > lastDayOfMonth) {\n    return endDate > lastDayOfMonth && startDate <= lastDayOfMonth;\n  }\n\n  return startDate < firstDayOfMonth && endDate >= firstDayOfMonth;\n}\n\nexport function getMonthDays(month, year, firstDayMonday, disableRange, disabledDays, disableOffsetDays, startDate, endDate, minDate, maxDate) {\n  if (minDate instanceof Date) minDate.setHours(0, 0, 0, 0);\n  if (maxDate instanceof Date) maxDate.setHours(0, 0, 0, 0);\n  if (startDate instanceof Date) startDate.setHours(0, 0, 0, 0);\n  if (endDate instanceof Date) endDate.setHours(0, 0, 0, 0);\n  var firstMonthDay = new Date(year, month, 1);\n  var lastMonthDay = new Date(year, month + 1, 0);\n  var daysToAdd = getNumberOfDaysInMonth(month, year);\n  var days = [];\n  var startWeekOffset = firstDayMonday ? MONDAY_FIRST[firstMonthDay.getDay()] : firstMonthDay.getDay();\n  var daysToCompleteRows = (startWeekOffset + daysToAdd) % 7;\n  var lastRowNextMonthDays = daysToCompleteRows ? 7 - daysToCompleteRows : 0;\n\n  for (var i = -startWeekOffset; i < daysToAdd + lastRowNextMonthDays; i++) {\n    var date = addDays(firstMonthDay, i);\n    var day = date.getDate();\n    var localMonth = date.getMonth();\n    var fullDay = day < 10 ? \"0\" + day : day.toString();\n    var fullMonth = localMonth < 9 ? \"0\" + (localMonth + 1) : (localMonth + 1).toString();\n    var id = date.getFullYear() + \"-\" + fullMonth + \"-\" + fullDay;\n    var isOnSelectableRange = !minDate && !maxDate;\n    isOnSelectableRange = (!minDate || minDate && date >= minDate) && (!maxDate || maxDate && date <= maxDate);\n    var isOutOfRange = !!(minDate && date < minDate || maxDate && date > maxDate);\n    var isMonthDate = i >= 0 && i < daysToAdd;\n    var isStartDate = false;\n    var isEndDate = false;\n    var isActive = false;\n\n    if (endDate && startDate && !disableRange) {\n      isStartDate = isMonthDate && sameDate(date, startDate);\n      isEndDate = isMonthDate && sameDate(date, endDate);\n\n      if (!isMonthDate) {\n        isActive = dayShouldBeActive(date, startDate, endDate, firstMonthDay, lastMonthDay);\n      } else {\n        isActive = date >= startDate && date <= endDate;\n      }\n    } else if (isMonthDate && startDate && sameDate(date, startDate)) {\n      isStartDate = true;\n      isEndDate = true;\n      isActive = true;\n    }\n\n    var today = new Date();\n    var isToday = day === today.getDate() && localMonth === today.getMonth() && year === today.getFullYear();\n    days.push({\n      key: localMonth + \"-\" + id,\n      id: id,\n      date: date,\n      isToday: isToday,\n      isMonthDate: isMonthDate,\n      isActive: isActive,\n      isStartDate: isStartDate,\n      isEndDate: isEndDate,\n      isOutOfRange: isOutOfRange,\n      isVisible: isOnSelectableRange && isMonthDate && !disabledDays[id],\n      isHidden: disableOffsetDays && !isMonthDate\n    });\n  }\n\n  return days;\n}\nexport function areEqual(prevProps, nextProps) {\n  return prevProps.month === nextProps.month && prevProps.year === nextProps.year && prevProps.locale === nextProps.locale && Array.isArray(prevProps.dayNames) === Array.isArray(nextProps.dayNames) && prevProps.showWeekdays === nextProps.showWeekdays && prevProps.disableRange === nextProps.disableRange && prevProps.disableOffsetDays === nextProps.disableOffsetDays && prevProps.firstDayMonday === nextProps.firstDayMonday && !changeMarkedDays(prevProps.markedDays, nextProps.markedDays) && !changedDate(prevProps.startDate, nextProps.startDate) && !changedDate(prevProps.endDate, nextProps.endDate) && !changedDate(prevProps.minDate, nextProps.minDate) && !changedDate(prevProps.maxDate, nextProps.maxDate);\n}","map":{"version":3,"mappings":"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","names":["addDays","getNumberOfDaysInMonth","changedDate","changeMarkedDays","sameDate","MONDAY_FIRST","dayShouldBeActive","date","startDate","endDate","firstDayOfMonth","lastDayOfMonth","getMonthDays","month","year","firstDayMonday","disableRange","disabledDays","disableOffsetDays","minDate","maxDate","Date","setHours","firstMonthDay","lastMonthDay","daysToAdd","days","startWeekOffset","getDay","daysToCompleteRows","lastRowNextMonthDays","i","day","getDate","localMonth","getMonth","fullDay","toString","fullMonth","id","getFullYear","isOnSelectableRange","isOutOfRange","isMonthDate","isStartDate","isEndDate","isActive","today","isToday","push","key","isVisible","isHidden","areEqual","prevProps","nextProps","locale","Array","isArray","dayNames","showWeekdays","markedDays"],"sources":["utils.tsx"],"sourcesContent":["import { addDays, getNumberOfDaysInMonth } from '../utils/date';\nimport { changedDate, changeMarkedDays, sameDate } from '../utils/validations';\nimport { MonthProps, DayType } from '../types';\n\nconst MONDAY_FIRST = [6, 0, 1, 2, 3, 4, 5];\n\nfunction dayShouldBeActive(\n  date: Date,\n  startDate: Date,\n  endDate: Date,\n  firstDayOfMonth: Date,\n  lastDayOfMonth: Date\n) {\n  if (date > lastDayOfMonth) {\n    return endDate > lastDayOfMonth && startDate <= lastDayOfMonth;\n  }\n\n  return startDate < firstDayOfMonth && endDate >= firstDayOfMonth;\n}\n\nexport function getMonthDays(\n  month: number,\n  year: number,\n  firstDayMonday: boolean,\n  disableRange: boolean,\n  disabledDays: { [key: string]: any },\n  disableOffsetDays: boolean,\n  startDate?: Date,\n  endDate?: Date,\n  minDate?: Date,\n  maxDate?: Date\n): DayType[] {\n  if (minDate instanceof Date) minDate.setHours(0, 0, 0, 0);\n  if (maxDate instanceof Date) maxDate.setHours(0, 0, 0, 0);\n  if (startDate instanceof Date) startDate.setHours(0, 0, 0, 0);\n  if (endDate instanceof Date) endDate.setHours(0, 0, 0, 0);\n\n  const firstMonthDay = new Date(year, month, 1);\n  const lastMonthDay = new Date(year, month + 1, 0);\n\n  const daysToAdd = getNumberOfDaysInMonth(month, year);\n  const days: DayType[] = [];\n\n  const startWeekOffset = firstDayMonday\n    ? MONDAY_FIRST[firstMonthDay.getDay()]\n    : firstMonthDay.getDay();\n  const daysToCompleteRows = (startWeekOffset + daysToAdd) % 7;\n  const lastRowNextMonthDays = daysToCompleteRows ? 7 - daysToCompleteRows : 0;\n\n  for (let i = -startWeekOffset; i < daysToAdd + lastRowNextMonthDays; i++) {\n    const date: Date = addDays(firstMonthDay, i);\n    const day = date.getDate();\n    const localMonth = date.getMonth();\n    const fullDay = day < 10 ? `0${day}` : day.toString();\n    const fullMonth =\n      localMonth < 9 ? `0${localMonth + 1}` : (localMonth + 1).toString();\n    const id = `${date.getFullYear()}-${fullMonth}-${fullDay}`;\n\n    let isOnSelectableRange = !minDate && !maxDate;\n\n    isOnSelectableRange =\n      (!minDate || (minDate && date >= minDate)) &&\n      (!maxDate || (maxDate && date <= maxDate));\n\n    const isOutOfRange = !!(\n      (minDate && date < minDate) ||\n      (maxDate && date > maxDate)\n    );\n    const isMonthDate = i >= 0 && i < daysToAdd;\n    let isStartDate = false;\n    let isEndDate = false;\n    let isActive = false;\n\n    if (endDate && startDate && !disableRange) {\n      isStartDate = isMonthDate && sameDate(date, startDate);\n      isEndDate = isMonthDate && sameDate(date, endDate);\n\n      if (!isMonthDate) {\n        isActive = dayShouldBeActive(\n          date,\n          startDate,\n          endDate,\n          firstMonthDay,\n          lastMonthDay\n        );\n      } else {\n        isActive = date >= startDate && date <= endDate;\n      }\n    } else if (isMonthDate && startDate && sameDate(date, startDate)) {\n      isStartDate = true;\n      isEndDate = true;\n      isActive = true;\n    }\n\n    const today = new Date();\n    const isToday =\n      day === today.getDate() &&\n      localMonth === today.getMonth() &&\n      year === today.getFullYear();\n\n    days.push({\n      key: `${localMonth}-${id}`,\n      id: id,\n      date,\n      isToday,\n      isMonthDate,\n      isActive,\n      isStartDate,\n      isEndDate,\n      isOutOfRange,\n      isVisible: isOnSelectableRange && isMonthDate && !disabledDays[id],\n      isHidden: disableOffsetDays && !isMonthDate,\n    });\n  }\n\n  return days;\n}\n\nexport function areEqual(prevProps: MonthProps, nextProps: MonthProps) {\n  return (\n    prevProps.month === nextProps.month &&\n    prevProps.year === nextProps.year &&\n    prevProps.locale === nextProps.locale &&\n    Array.isArray(prevProps.dayNames) === Array.isArray(nextProps.dayNames) &&\n    prevProps.showWeekdays === nextProps.showWeekdays &&\n    prevProps.disableRange === nextProps.disableRange &&\n    prevProps.disableOffsetDays === nextProps.disableOffsetDays &&\n    prevProps.firstDayMonday === nextProps.firstDayMonday &&\n    !changeMarkedDays(prevProps.markedDays, nextProps.markedDays) &&\n    !changedDate(prevProps.startDate, nextProps.startDate) &&\n    !changedDate(prevProps.endDate, nextProps.endDate) &&\n    !changedDate(prevProps.minDate, nextProps.minDate) &&\n    !changedDate(prevProps.maxDate, nextProps.maxDate)\n  );\n}\n"]},"metadata":{},"sourceType":"module"}