{"ast":null,"code":"import React, { useMemo } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport { Month } from 'react-native-month';\nimport moment from 'moment';\nimport { isValidDate, getMonthNames, isSameDate } from \"../../utils/date\";\nimport { shouldRenderMonth, isMonthDrawn } from \"./utils\";\nimport styles from \"./styles\";\nvar SHOULD_NOT_UPDATE = true;\nvar EmptyMonth = React.memo(function (props) {\n  var content = useMemo(function () {\n    return {\n      height: props.height,\n      justifyContent: 'center',\n      alignItems: 'center'\n    };\n  }, [props.height]);\n  return React.createElement(View, {\n    style: [content, props.theme.emptyMonthContainerStyle]\n  }, React.createElement(Text, {\n    style: [styles.emptyMonthText, props.theme.emptyMonthTextStyle],\n    allowFontScaling: false\n  }, props.name));\n}, function () {\n  return SHOULD_NOT_UPDATE;\n});\nvar MonthTitle = React.memo(function (props) {\n  return React.createElement(Text, {\n    allowFontScaling: false,\n    style: [styles.monthTitleText, props.theme.monthTitleTextStyle]\n  }, props.name);\n}, function () {\n  return SHOULD_NOT_UPDATE;\n});\nexport default React.memo(function (props) {\n  var month = props.month,\n      year = props.year,\n      minDate = props.minDate,\n      maxDate = props.maxDate,\n      showMonthTitle = props.showMonthTitle,\n      renderAllMonths = props.renderAllMonths,\n      monthNames = props.monthNames,\n      _props$theme = props.theme,\n      theme = _props$theme === void 0 ? {} : _props$theme,\n      height = props.height,\n      locale = props.locale,\n      index = props.index;\n  var MONTH_NAMES = Array.isArray(monthNames) && monthNames.length === 12 ? monthNames : getMonthNames(locale);\n  var monthName = MONTH_NAMES[month] + \" \" + year;\n\n  if (!renderAllMonths && (index < props.firstViewableIndex - props.viewableRangeOffset || index > props.lastViewableIndex)) {\n    return React.createElement(EmptyMonth, {\n      name: monthName,\n      height: height,\n      theme: theme\n    });\n  }\n\n  var min = minDate && isValidDate(new Date(minDate)) ? moment(minDate, 'YYYY-MM-DD').toDate() : undefined;\n  var max = maxDate && isValidDate(new Date(maxDate)) ? moment(maxDate, 'YYYY-MM-DD').toDate() : undefined;\n  return React.createElement(View, {\n    style: {\n      height: height\n    }\n  }, showMonthTitle && React.createElement(MonthTitle, {\n    name: monthName,\n    theme: theme\n  }), React.createElement(Month, {\n    month: month,\n    year: year,\n    disabledDays: props.disabledDays,\n    disableOffsetDays: props.disableOffsetDays,\n    disableRange: props.disableRange,\n    startDate: props.startDate,\n    endDate: props.endDate,\n    firstDayMonday: props.firstDayMonday,\n    locale: props.locale,\n    markedDays: props.markedDays,\n    maxDate: max,\n    minDate: min,\n    onPress: props.onPress,\n    renderDayContent: props.renderDayContent,\n    showWeekdays: props.showWeekdays,\n    theme: props.theme,\n    dayNames: props.dayNames\n  }));\n}, function (prevProps, nextProps) {\n  if (prevProps.disableRange !== nextProps.disableRange) {\n    return false;\n  }\n\n  if ((prevProps.index < prevProps.firstViewableIndex - prevProps.viewableRangeOffset || prevProps.index > prevProps.lastViewableIndex) && nextProps.index >= nextProps.firstViewableIndex && nextProps.index <= nextProps.lastViewableIndex) {\n    return false;\n  }\n\n  if ((!nextProps.dayNames || !nextProps.monthNames) && prevProps.locale !== nextProps.locale) {\n    return false;\n  }\n\n  var currentMonth = moment(nextProps.firstMonthToRender).add(nextProps.index, 'months');\n\n  if (prevProps.disableRange === nextProps.disableRange) {\n    if (nextProps.disableRange) {\n      if (prevProps.startDate !== nextProps.startDate) {\n        if (!prevProps.startDate && moment(nextProps.startDate).isSame(currentMonth, 'month')) {\n          return false;\n        }\n\n        if (prevProps.startDate && (moment(prevProps.startDate).isSame(currentMonth, 'month') || moment(nextProps.startDate).isSame(currentMonth, 'month'))) {\n          return false;\n        }\n      }\n    } else {\n      var startDateChanged = prevProps.startDate instanceof Date && nextProps.startDate instanceof Date && !isSameDate(prevProps.startDate, nextProps.startDate) || prevProps.startDate !== nextProps.startDate;\n      var endDateChanged = prevProps.endDate instanceof Date && nextProps.endDate instanceof Date && !isSameDate(prevProps.endDate, nextProps.endDate) || prevProps.endDate !== nextProps.endDate;\n\n      if (startDateChanged || endDateChanged) {\n        if (isMonthDrawn(currentMonth.year(), currentMonth.month(), prevProps.startDate, prevProps.endDate) !== isMonthDrawn(currentMonth.year(), currentMonth.month(), nextProps.startDate, nextProps.endDate) || prevProps.startDate instanceof Date && moment(prevProps.startDate).isSame(currentMonth, 'month') && (startDateChanged || endDateChanged) || nextProps.startDate instanceof Date && moment(nextProps.startDate).isSame(currentMonth, 'month') && startDateChanged || prevProps.endDate instanceof Date && moment(prevProps.endDate).isSame(currentMonth, 'month') && endDateChanged || nextProps.endDate instanceof Date && moment(nextProps.endDate).isSame(currentMonth, 'month') && endDateChanged) {\n          return false;\n        }\n      }\n    }\n  } else {\n    return false;\n  }\n\n  if (shouldRenderMonth(currentMonth, prevProps.minDate, nextProps.minDate) || shouldRenderMonth(currentMonth, prevProps.maxDate, nextProps.maxDate)) {\n    return false;\n  }\n\n  return true;\n});","map":{"version":3,"mappings":"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","names":["React","useMemo","Month","moment","isValidDate","getMonthNames","isSameDate","shouldRenderMonth","isMonthDrawn","styles","SHOULD_NOT_UPDATE","EmptyMonth","memo","props","content","height","justifyContent","alignItems","View","style","theme","emptyMonthContainerStyle","Text","emptyMonthText","emptyMonthTextStyle","allowFontScaling","name","MonthTitle","monthTitleText","monthTitleTextStyle","month","year","minDate","maxDate","showMonthTitle","renderAllMonths","monthNames","locale","index","MONTH_NAMES","Array","isArray","length","monthName","firstViewableIndex","viewableRangeOffset","lastViewableIndex","min","Date","toDate","undefined","max","disabledDays","disableOffsetDays","disableRange","startDate","endDate","firstDayMonday","markedDays","onPress","renderDayContent","showWeekdays","dayNames","prevProps","nextProps","currentMonth","firstMonthToRender","add","isSame","startDateChanged","endDateChanged"],"sources":["index.tsx"],"sourcesContent":["import React, { useMemo } from 'react';\nimport { View, Text } from 'react-native';\nimport { Month, MonthProps } from 'react-native-month';\nimport moment from 'moment';\nimport { isValidDate, getMonthNames, isSameDate } from '../../utils/date';\nimport { shouldRenderMonth, isMonthDrawn } from './utils';\nimport styles from './styles';\nimport { ThemeType } from '../../types';\n\ninterface EmptyMonthProps {\n  height: number;\n  name: string;\n  theme: ThemeType;\n}\n\nconst SHOULD_NOT_UPDATE = true;\n\nconst EmptyMonth = React.memo<EmptyMonthProps>(\n  (props: EmptyMonthProps) => {\n    const content = useMemo(\n      () => ({\n        height: props.height,\n        justifyContent: 'center' as const,\n        alignItems: 'center' as const,\n      }),\n      [props.height]\n    );\n    return (\n      <View style={[content, props.theme.emptyMonthContainerStyle]}>\n        <Text\n          style={[styles.emptyMonthText, props.theme.emptyMonthTextStyle]}\n          allowFontScaling={false}\n        >\n          {props.name}\n        </Text>\n      </View>\n    );\n  },\n  () => SHOULD_NOT_UPDATE\n);\n\ninterface MonthTitleProps {\n  name: string;\n  theme: ThemeType;\n}\n\nconst MonthTitle = React.memo<MonthTitleProps>(\n  (props: MonthTitleProps) => (\n    <Text\n      allowFontScaling={false}\n      style={[styles.monthTitleText, props.theme.monthTitleTextStyle]}\n    >\n      {props.name}\n    </Text>\n  ),\n  () => SHOULD_NOT_UPDATE\n);\n\ninterface Props extends MonthProps {\n  monthNames?: string[];\n  firstMonthToRender: Date;\n  firstViewableIndex: number;\n  lastViewableIndex: number;\n  viewableRangeOffset: number;\n  renderAllMonths?: boolean;\n  showMonthTitle: boolean;\n  height: number;\n  index: number;\n}\n\nexport default React.memo<Props>(\n  (props: Props) => {\n    const {\n      month,\n      year,\n      minDate,\n      maxDate,\n      showMonthTitle,\n      renderAllMonths,\n      monthNames,\n      theme = {},\n      height,\n      locale,\n      index,\n    } = props;\n\n    const MONTH_NAMES =\n      Array.isArray(monthNames) && monthNames.length === 12\n        ? monthNames\n        : getMonthNames(locale);\n    const monthName = `${MONTH_NAMES[month]} ${year}`;\n\n    if (\n      !renderAllMonths &&\n      (index < props.firstViewableIndex - props.viewableRangeOffset ||\n        index > props.lastViewableIndex)\n    ) {\n      return <EmptyMonth name={monthName} height={height} theme={theme} />;\n    }\n\n    const min =\n      minDate && isValidDate(new Date(minDate))\n        ? moment(minDate, 'YYYY-MM-DD').toDate()\n        : undefined;\n    const max =\n      maxDate && isValidDate(new Date(maxDate))\n        ? moment(maxDate, 'YYYY-MM-DD').toDate()\n        : undefined;\n\n    return (\n      <View style={{ height }}>\n        {showMonthTitle && <MonthTitle name={monthName} theme={theme} />}\n        <Month\n          month={month}\n          year={year}\n          disabledDays={props.disabledDays}\n          disableOffsetDays={props.disableOffsetDays}\n          disableRange={props.disableRange}\n          startDate={props.startDate}\n          endDate={props.endDate}\n          firstDayMonday={props.firstDayMonday}\n          locale={props.locale}\n          markedDays={props.markedDays}\n          maxDate={max}\n          minDate={min}\n          onPress={props.onPress}\n          renderDayContent={props.renderDayContent}\n          showWeekdays={props.showWeekdays}\n          theme={props.theme}\n          dayNames={props.dayNames}\n        />\n      </View>\n    );\n  },\n  (prevProps: Props, nextProps: Props) => {\n    if (prevProps.disableRange !== nextProps.disableRange) {\n      return false;\n    }\n\n    if (\n      (prevProps.index <\n        prevProps.firstViewableIndex - prevProps.viewableRangeOffset ||\n        prevProps.index > prevProps.lastViewableIndex) &&\n      nextProps.index >= nextProps.firstViewableIndex &&\n      nextProps.index <= nextProps.lastViewableIndex\n    ) {\n      return false;\n    }\n\n    if (\n      (!nextProps.dayNames || !nextProps.monthNames) &&\n      prevProps.locale !== nextProps.locale\n    ) {\n      return false;\n    }\n\n    const currentMonth = moment(nextProps.firstMonthToRender).add(\n      nextProps.index,\n      'months'\n    );\n\n    if (prevProps.disableRange === nextProps.disableRange) {\n      if (nextProps.disableRange) {\n        if (prevProps.startDate !== nextProps.startDate) {\n          if (\n            !prevProps.startDate &&\n            moment(nextProps.startDate).isSame(currentMonth, 'month')\n          ) {\n            return false;\n          }\n\n          if (\n            prevProps.startDate &&\n            (moment(prevProps.startDate).isSame(currentMonth, 'month') ||\n              moment(nextProps.startDate).isSame(currentMonth, 'month'))\n          ) {\n            return false;\n          }\n        }\n      } else {\n        const startDateChanged =\n          (prevProps.startDate instanceof Date &&\n            nextProps.startDate instanceof Date &&\n            !isSameDate(prevProps.startDate, nextProps.startDate)) ||\n          prevProps.startDate !== nextProps.startDate;\n        const endDateChanged =\n          (prevProps.endDate instanceof Date &&\n            nextProps.endDate instanceof Date &&\n            !isSameDate(prevProps.endDate, nextProps.endDate)) ||\n          prevProps.endDate !== nextProps.endDate;\n\n        if (startDateChanged || endDateChanged) {\n          if (\n            isMonthDrawn(\n              currentMonth.year(),\n              currentMonth.month(),\n              prevProps.startDate,\n              prevProps.endDate\n            ) !==\n              isMonthDrawn(\n                currentMonth.year(),\n                currentMonth.month(),\n                nextProps.startDate,\n                nextProps.endDate\n              ) ||\n            (prevProps.startDate instanceof Date &&\n              moment(prevProps.startDate).isSame(currentMonth, 'month') &&\n              (startDateChanged || endDateChanged)) ||\n            (nextProps.startDate instanceof Date &&\n              moment(nextProps.startDate).isSame(currentMonth, 'month') &&\n              startDateChanged) ||\n            (prevProps.endDate instanceof Date &&\n              moment(prevProps.endDate).isSame(currentMonth, 'month') &&\n              endDateChanged) ||\n            (nextProps.endDate instanceof Date &&\n              moment(nextProps.endDate).isSame(currentMonth, 'month') &&\n              endDateChanged)\n          ) {\n            return false;\n          }\n        }\n      }\n    } else {\n      return false;\n    }\n\n    if (\n      shouldRenderMonth(currentMonth, prevProps.minDate, nextProps.minDate) ||\n      shouldRenderMonth(currentMonth, prevProps.maxDate, nextProps.maxDate)\n    ) {\n      return false;\n    }\n\n    return true;\n  }\n);\n"]},"metadata":{},"sourceType":"module"}