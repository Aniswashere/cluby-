{"ast":null,"code":"function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nimport React, { useCallback, useMemo } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Dot from \"../Dot\";\nvar styles = StyleSheet.create({\n  activeDate: {\n    backgroundColor: '#3b5998'\n  },\n  container: {\n    alignItems: 'center',\n    justifyContent: 'center',\n    backgroundColor: 'white',\n    flex: 1,\n    marginVertical: 5,\n    paddingVertical: 10\n  },\n  content: {\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  dotsContainer: {\n    position: 'absolute',\n    bottom: 3,\n    flexDirection: 'row'\n  },\n  endDate: {\n    borderBottomRightRadius: 60,\n    borderTopRightRadius: 60\n  },\n  startDate: {\n    borderBottomLeftRadius: 60,\n    borderTopLeftRadius: 60\n  },\n  nonTouchableDayText: {\n    color: '#d3d3d3'\n  }\n});\nvar NonTouchableDay = React.memo(function (props) {\n  var isMonthDate = props.isMonthDate,\n      isActive = props.isActive,\n      isOutOfRange = props.isOutOfRange,\n      isStartDate = props.isStartDate,\n      isEndDate = props.isEndDate,\n      theme = props.theme,\n      date = props.date,\n      isToday = props.isToday;\n  return React.createElement(View, {\n    style: [styles.container, theme.dayContainerStyle, theme.nonTouchableDayContainerStyle, isToday && !isActive ? theme.todayContainerStyle : {}, isActive ? styles.activeDate : {}, isActive ? theme.activeDayContainerStyle : {}, isOutOfRange ? theme.dayOutOfRangeContainerStyle : {}, isEndDate ? styles.endDate : {}, isEndDate ? theme.endDateContainerStyle : {}, isStartDate ? styles.startDate : {}, isStartDate ? theme.startDateContainerStyle : {}]\n  }, React.createElement(View, {\n    style: [styles.content, theme.dayContentStyle, isActive ? theme.activeDayContentStyle : {}]\n  }, React.createElement(Text, {\n    style: [styles.nonTouchableDayText, theme.nonTouchableDayTextStyle, isMonthDate ? theme.nonTouchableLastMonthDayTextStyle : {}, isToday ? theme.todayTextStyle : {}, isOutOfRange ? theme.dayOutOfRangeTextStyle : {}]\n  }, date.getDate())));\n}, function (prevProps, nextProps) {\n  return prevProps.isActive === nextProps.isActive && prevProps.isVisible === nextProps.isVisible && prevProps.isStartDate === nextProps.isStartDate && prevProps.isEndDate === nextProps.isEndDate;\n});\nvar Day = React.memo(function (props) {\n  var _props$item = props.item,\n      date = _props$item.date,\n      isVisible = _props$item.isVisible,\n      isActive = _props$item.isActive,\n      isStartDate = _props$item.isStartDate,\n      isEndDate = _props$item.isEndDate,\n      isMonthDate = _props$item.isMonthDate,\n      isOutOfRange = _props$item.isOutOfRange,\n      isToday = _props$item.isToday,\n      isHidden = _props$item.isHidden,\n      _props$dots = props.dots,\n      dots = _props$dots === void 0 ? [] : _props$dots,\n      theme = props.theme;\n  var dayTextStyle = useMemo(function () {\n    return {\n      color: isActive ? 'white' : 'black'\n    };\n  }, [isActive]);\n  var renderDot = useCallback(function (d, i) {\n    return React.createElement(Dot, _extends({\n      key: i.toString(),\n      active: isActive,\n      index: i\n    }, d, {\n      dotContainerStyle: theme.dotContainerStyle\n    }));\n  }, [isActive, theme.dotContainerStyle]);\n\n  if (isHidden) {\n    return React.createElement(View, {\n      style: [styles.container]\n    });\n  }\n\n  if (!isVisible) {\n    return React.createElement(NonTouchableDay, {\n      isActive: isActive,\n      date: date,\n      theme: theme,\n      isMonthDate: isMonthDate,\n      isOutOfRange: isOutOfRange,\n      isStartDate: isStartDate,\n      isEndDate: isEndDate,\n      isVisible: isVisible,\n      isToday: isToday\n    });\n  }\n\n  var finalDots = dots.slice(0, 3);\n  return React.createElement(TouchableOpacity, {\n    style: [styles.container, theme.dayContainerStyle, isToday && !isActive ? theme.todayContainerStyle : {}, isActive ? styles.activeDate : {}, isActive ? theme.activeDayContainerStyle : {}, isStartDate ? styles.startDate : {}, isStartDate ? theme.startDateContainerStyle : {}, isEndDate ? styles.endDate : {}, isEndDate ? theme.endDateContainerStyle : {}],\n    onPress: function onPress() {\n      return props.onPress(props.item.date);\n    }\n  }, props.renderDayContent ? props.renderDayContent(props.item) : React.createElement(View, {\n    style: [styles.content, theme.dayContentStyle, isActive ? theme.activeDayContentStyle : {}]\n  }, React.createElement(Text, {\n    style: [dayTextStyle, theme.dayTextStyle, isToday ? theme.todayTextStyle : {}, isActive ? theme.activeDayTextStyle : {}]\n  }, date.getDate()), React.createElement(View, {\n    style: styles.dotsContainer\n  }, finalDots.map(renderDot))));\n}, function (prevProps, nextProps) {\n  return prevProps.item.isActive === nextProps.item.isActive && prevProps.item.isVisible === nextProps.item.isVisible && prevProps.item.isStartDate === nextProps.item.isStartDate && prevProps.item.isEndDate === nextProps.item.isEndDate && prevProps.renderDayContent === nextProps.renderDayContent;\n});\nexport default Day;","map":{"version":3,"mappings":"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","names":["React","useCallback","useMemo","Dot","styles","StyleSheet","create","activeDate","backgroundColor","container","alignItems","justifyContent","flex","marginVertical","paddingVertical","content","dotsContainer","position","bottom","flexDirection","endDate","borderBottomRightRadius","borderTopRightRadius","startDate","borderBottomLeftRadius","borderTopLeftRadius","nonTouchableDayText","color","NonTouchableDay","memo","props","isMonthDate","isActive","isOutOfRange","isStartDate","isEndDate","theme","date","isToday","View","style","dayContainerStyle","nonTouchableDayContainerStyle","todayContainerStyle","activeDayContainerStyle","dayOutOfRangeContainerStyle","endDateContainerStyle","startDateContainerStyle","dayContentStyle","activeDayContentStyle","Text","nonTouchableDayTextStyle","nonTouchableLastMonthDayTextStyle","todayTextStyle","dayOutOfRangeTextStyle","getDate","prevProps","nextProps","isVisible","Day","item","isHidden","dots","dayTextStyle","renderDot","d","i","key","toString","active","index","dotContainerStyle","finalDots","slice","TouchableOpacity","onPress","renderDayContent","activeDayTextStyle","map"],"sources":["index.tsx"],"sourcesContent":["import React, { ReactElement, useCallback, useMemo } from 'react';\nimport { StyleSheet, TouchableOpacity, View, Text } from 'react-native';\nimport { DayType, ThemeType, DayDot } from '../../types';\nimport Dot from '../Dot';\n\nconst styles = StyleSheet.create({\n  activeDate: {\n    backgroundColor: '#3b5998',\n  },\n  container: {\n    alignItems: 'center',\n    justifyContent: 'center',\n    backgroundColor: 'white',\n    flex: 1,\n    marginVertical: 5,\n    paddingVertical: 10,\n  },\n  content: {\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  dotsContainer: { position: 'absolute', bottom: 3, flexDirection: 'row' },\n  endDate: {\n    borderBottomRightRadius: 60,\n    borderTopRightRadius: 60,\n  },\n  startDate: {\n    borderBottomLeftRadius: 60,\n    borderTopLeftRadius: 60,\n  },\n  nonTouchableDayText: { color: '#d3d3d3' },\n});\n\ninterface NonTouchableDayProps {\n  date: Date;\n  isActive: boolean;\n  isMonthDate: boolean;\n  isOutOfRange: boolean;\n  isStartDate: boolean;\n  isEndDate: boolean;\n  isVisible: boolean;\n  isToday: boolean;\n  theme: ThemeType;\n}\n\nconst NonTouchableDay = React.memo<NonTouchableDayProps>(\n  (props: NonTouchableDayProps) => {\n    const {\n      isMonthDate,\n      isActive,\n      isOutOfRange,\n      isStartDate,\n      isEndDate,\n      theme,\n      date,\n      isToday,\n    } = props;\n\n    return (\n      <View\n        style={[\n          styles.container,\n          theme.dayContainerStyle,\n          theme.nonTouchableDayContainerStyle,\n          isToday && !isActive ? theme.todayContainerStyle : {},\n          isActive ? styles.activeDate : {},\n          isActive ? theme.activeDayContainerStyle : {},\n          isOutOfRange ? theme.dayOutOfRangeContainerStyle : {},\n          isEndDate ? styles.endDate : {},\n          isEndDate ? theme.endDateContainerStyle : {},\n          isStartDate ? styles.startDate : {},\n          isStartDate ? theme.startDateContainerStyle : {},\n        ]}\n      >\n        <View\n          style={[\n            styles.content,\n            theme.dayContentStyle,\n            isActive ? theme.activeDayContentStyle : {},\n          ]}\n        >\n          <Text\n            style={[\n              styles.nonTouchableDayText,\n              theme.nonTouchableDayTextStyle,\n              isMonthDate ? theme.nonTouchableLastMonthDayTextStyle : {},\n              isToday ? theme.todayTextStyle : {},\n              isOutOfRange ? theme.dayOutOfRangeTextStyle : {},\n            ]}\n          >\n            {date.getDate()}\n          </Text>\n        </View>\n      </View>\n    );\n  },\n  (prevProps, nextProps) => {\n    return (\n      prevProps.isActive === nextProps.isActive &&\n      prevProps.isVisible === nextProps.isVisible &&\n      prevProps.isStartDate === nextProps.isStartDate &&\n      prevProps.isEndDate === nextProps.isEndDate\n    );\n  }\n);\n\ninterface Props {\n  onPress: (date: Date) => void;\n  dots?: DayDot[];\n  item: DayType;\n  theme: ThemeType;\n  renderDayContent?: (day: DayType) => ReactElement;\n}\n\nconst Day = React.memo<Props>(\n  (props: Props) => {\n    const {\n      item: {\n        date,\n        isVisible,\n        isActive,\n        isStartDate,\n        isEndDate,\n        isMonthDate,\n        isOutOfRange,\n        isToday,\n        isHidden,\n      },\n      dots = [],\n      theme,\n    } = props;\n\n    const dayTextStyle = useMemo(\n      () => ({\n        color: isActive ? 'white' : 'black',\n      }),\n      [isActive]\n    );\n\n    const renderDot = useCallback(\n      (d: DayDot, i) => {\n        return (\n          <Dot\n            key={i.toString()}\n            active={isActive}\n            index={i}\n            {...d}\n            dotContainerStyle={theme.dotContainerStyle}\n          />\n        );\n      },\n      [isActive, theme.dotContainerStyle]\n    );\n\n    if (isHidden) {\n      return <View style={[styles.container]} />;\n    }\n\n    if (!isVisible) {\n      return (\n        <NonTouchableDay\n          isActive={isActive}\n          date={date}\n          theme={theme}\n          isMonthDate={isMonthDate}\n          isOutOfRange={isOutOfRange}\n          isStartDate={isStartDate}\n          isEndDate={isEndDate}\n          isVisible={isVisible}\n          isToday={isToday}\n        />\n      );\n    }\n\n    // Should render a maximum of 3 dots\n    const finalDots = dots.slice(0, 3);\n\n    return (\n      <TouchableOpacity\n        style={[\n          styles.container,\n          theme.dayContainerStyle,\n          isToday && !isActive ? theme.todayContainerStyle : {},\n          isActive ? styles.activeDate : {},\n          isActive ? theme.activeDayContainerStyle : {},\n          isStartDate ? styles.startDate : {},\n          isStartDate ? theme.startDateContainerStyle : {},\n          isEndDate ? styles.endDate : {},\n          isEndDate ? theme.endDateContainerStyle : {},\n        ]}\n        onPress={() => props.onPress(props.item.date)}\n      >\n        {props.renderDayContent ? (\n          props.renderDayContent(props.item)\n        ) : (\n          <View\n            style={[\n              styles.content,\n              theme.dayContentStyle,\n              isActive ? theme.activeDayContentStyle : {},\n            ]}\n          >\n            <Text\n              style={[\n                dayTextStyle,\n                theme.dayTextStyle,\n                isToday ? theme.todayTextStyle : {},\n                isActive ? theme.activeDayTextStyle : {},\n              ]}\n            >\n              {date.getDate()}\n            </Text>\n            <View style={styles.dotsContainer}>{finalDots.map(renderDot)}</View>\n          </View>\n        )}\n      </TouchableOpacity>\n    );\n  },\n  (prevProps, nextProps) => {\n    return (\n      prevProps.item.isActive === nextProps.item.isActive &&\n      prevProps.item.isVisible === nextProps.item.isVisible &&\n      prevProps.item.isStartDate === nextProps.item.isStartDate &&\n      prevProps.item.isEndDate === nextProps.item.isEndDate &&\n      prevProps.renderDayContent === nextProps.renderDayContent\n    );\n  }\n);\n\nexport default Day;\n"]},"metadata":{},"sourceType":"module"}