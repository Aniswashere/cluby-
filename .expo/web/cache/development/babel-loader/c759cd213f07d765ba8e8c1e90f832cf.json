{"ast":null,"code":"import React from \"react\";\nimport { NavigationContainer } from \"@react-navigation/native\";\nimport { createNativeStackNavigator } from \"@react-navigation/native-stack\";\nimport { createBottomTabNavigator } from \"@react-navigation/bottom-tabs\";\nimport { themeColor, useTheme } from \"react-native-rapi-ui\";\nimport TabBarIcon from \"../components/utils/TabBarIcon\";\nimport TabBarText from \"../components/utils/TabBarText\";\nimport Profile from \"../screens/Profile\";\nimport SecondScreen from \"../screens/SecondScreen\";\nimport Calendar from \"../screens/Calendar\";\nimport Home from \"../screens/Home\";\nimport Notifications from \"../screens/Notifications\";\nimport { colors } from \"../components/utils/styles\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar MainStack = createNativeStackNavigator();\n\nvar Main = function Main() {\n  return _jsxs(MainStack.Navigator, {\n    screenOptions: {\n      headerShown: false\n    },\n    children: [_jsx(MainStack.Screen, {\n      name: \"MainTabs\",\n      component: MainTabs\n    }), _jsx(MainStack.Screen, {\n      name: \"SecondScreen\",\n      component: SecondScreen\n    })]\n  });\n};\n\nvar Tabs = createBottomTabNavigator();\n\nvar MainTabs = function MainTabs() {\n  var _useTheme = useTheme(),\n      isDarkmode = _useTheme.isDarkmode;\n\n  return _jsxs(Tabs.Navigator, {\n    screenOptions: {\n      headerShown: false,\n      tabBarStyle: {\n        borderTopColor: isDarkmode ? themeColor.dark100 : \"#c0c0c0\",\n        backgroundColor: isDarkmode ? themeColor.dark200 : \"#ffffff\"\n      }\n    },\n    children: [_jsx(Tabs.Screen, {\n      name: \"Profile\",\n      component: Profile,\n      options: {\n        tabBarLabel: function tabBarLabel(_ref) {\n          var focused = _ref.focused;\n          return _jsx(TabBarText, {\n            focused: focused,\n            title: \"Profile\"\n          });\n        },\n        tabBarIcon: function tabBarIcon(_ref2) {\n          var focused = _ref2.focused;\n          return _jsx(TabBarIcon, {\n            focused: focused,\n            icon: \"person\"\n          });\n        }\n      }\n    }), _jsx(Tabs.Screen, {\n      name: \"Calendar\",\n      component: Calendar,\n      options: {\n        tabBarLabel: function tabBarLabel(_ref3) {\n          var focused = _ref3.focused;\n          return _jsx(TabBarText, {\n            focused: focused,\n            title: \"Calendar\"\n          });\n        },\n        tabBarIcon: function tabBarIcon(_ref4) {\n          var focused = _ref4.focused;\n          return _jsx(TabBarIcon, {\n            focused: focused,\n            icon: \"calendar\"\n          });\n        }\n      }\n    }), _jsx(Tabs.Screen, {\n      name: \"Register\",\n      component: Register,\n      options: {\n        tabBarLabel: function tabBarLabel(_ref5) {\n          var focused = _ref5.focused;\n          return _jsx(TabBarText, {\n            focused: focused,\n            title: \"Register\"\n          });\n        },\n        tabBarIcon: function tabBarIcon(_ref6) {\n          var focused = _ref6.focused;\n          return _jsx(TabBarIcon, {\n            focused: focused,\n            icon: \"calendar\"\n          });\n        }\n      }\n    }), _jsx(Tabs.Screen, {\n      name: \"Home\",\n      component: Home,\n      options: {\n        tabBarLabel: function tabBarLabel(_ref7) {\n          var focused = _ref7.focused;\n          return _jsx(TabBarText, {\n            focused: focused,\n            title: \"Home\"\n          });\n        },\n        tabBarIcon: function tabBarIcon(_ref8) {\n          var focused = _ref8.focused;\n          return _jsx(TabBarIcon, {\n            focused: focused,\n            icon: \"md-home\"\n          });\n        },\n        headerStyle: {\n          backgroundColor: \"red\"\n        },\n        headerTransparent: true,\n        headerTintColor: colors.primary\n      }\n    }), _jsx(Tabs.Screen, {\n      name: \"Notifications\",\n      component: Notifications,\n      options: {\n        tabBarLabel: function tabBarLabel(_ref9) {\n          var focused = _ref9.focused;\n          return _jsx(TabBarText, {\n            focused: focused,\n            title: \"Notification\"\n          });\n        },\n        tabBarIcon: function tabBarIcon(_ref10) {\n          var focused = _ref10.focused;\n          return _jsx(TabBarIcon, {\n            focused: focused,\n            icon: \"ios-information-circle\"\n          });\n        }\n      }\n    })]\n  });\n};\n\nexport default (function () {\n  return _jsx(NavigationContainer, {\n    children: _jsx(Main, {})\n  });\n});","map":{"version":3,"sources":["C:/Users/admin/projettttt/cluby-main/cluby front7/src/navigation/AppNavigator.js"],"names":["React","NavigationContainer","createNativeStackNavigator","createBottomTabNavigator","themeColor","useTheme","TabBarIcon","TabBarText","Profile","SecondScreen","Calendar","Home","Notifications","colors","MainStack","Main","headerShown","MainTabs","Tabs","isDarkmode","tabBarStyle","borderTopColor","dark100","backgroundColor","dark200","tabBarLabel","focused","tabBarIcon","Register","headerStyle","headerTransparent","headerTintColor","primary"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { NavigationContainer } from \"@react-navigation/native\";\nimport { createNativeStackNavigator } from \"@react-navigation/native-stack\";\nimport { createBottomTabNavigator } from \"@react-navigation/bottom-tabs\";\n\nimport { themeColor, useTheme } from \"react-native-rapi-ui\";\nimport TabBarIcon from \"../components/utils/TabBarIcon\";\nimport TabBarText from \"../components/utils/TabBarText\";\n\nimport Profile from \"../screens/Profile\";\nimport SecondScreen from \"../screens/SecondScreen\";\nimport Calendar from \"../screens/Calendar\";\nimport Home from \"../screens/Home\";\n\n\nimport Notifications from \"../screens/Notifications\";\n\n\nimport { colors } from \"../components/utils/styles\";\n\nconst MainStack = createNativeStackNavigator();\nconst Main = () => {\n  return (\n    <MainStack.Navigator\n      screenOptions={{\n        headerShown: false,\n      }}\n    >\n      <MainStack.Screen name=\"MainTabs\" component={MainTabs} />\n      <MainStack.Screen name=\"SecondScreen\" component={SecondScreen} />\n    </MainStack.Navigator>\n  );\n};\n\nconst Tabs = createBottomTabNavigator();\nconst MainTabs = () => {\n  const { isDarkmode } = useTheme();\n  return (\n    <Tabs.Navigator\n      screenOptions={{\n        headerShown: false,\n        tabBarStyle: {\n          borderTopColor: isDarkmode ? themeColor.dark100 : \"#c0c0c0\",\n          backgroundColor: isDarkmode ? themeColor.dark200 : \"#ffffff\",\n        },\n      }}\n    >\n      {/* these icons using Ionicons */}\n      <Tabs.Screen\n        name=\"Profile\"\n        component={Profile}\n        options={{\n          tabBarLabel: ({ focused }) => (\n            <TabBarText focused={focused} title=\"Profile\" />\n          ),\n          tabBarIcon: ({ focused }) => (\n            <TabBarIcon focused={focused} icon={\"person\"} />\n          ),\n        }}\n      />\n     \n      <Tabs.Screen\n        name=\"Calendar\"\n        component={Calendar}\n        options={{\n          tabBarLabel: ({ focused }) => (\n            <TabBarText focused={focused} title=\"Calendar\" />\n          ),\n          tabBarIcon: ({ focused }) => (\n            <TabBarIcon focused={focused} icon={\"calendar\"} />\n          ),\n        }}\n      />\n      <Tabs.Screen\n        name=\"Register\"\n        component={Register}\n        options={{\n          tabBarLabel: ({ focused }) => (\n            <TabBarText focused={focused} title=\"Register\" />\n          ),\n          tabBarIcon: ({ focused }) => (\n            <TabBarIcon focused={focused} icon={\"calendar\"} />\n          ),\n        }}\n      />\n      <Tabs.Screen\n        name=\"Home\"\n        component={Home}\n        options={{\n        \n          tabBarLabel: ({ focused }) => (\n            <TabBarText focused={focused} title=\"Home\" />\n          ),\n          tabBarIcon: ({ focused }) => (\n            <TabBarIcon focused={focused} icon={\"md-home\"} />\n            \n          ),\n          headerStyle:{\n            backgroundColor:\"red\",\n          },\n          headerTransparent:true,\n          headerTintColor: colors.primary,\n          \n        }}\n      />\n    \n      <Tabs.Screen\n        name=\"Notifications\"\n        component={Notifications}\n        options={{\n          tabBarLabel: ({ focused }) => (\n            <TabBarText focused={focused} title=\"Notification\" />\n          ),\n          tabBarIcon: ({ focused }) => (\n            <TabBarIcon focused={focused} icon={\"ios-information-circle\"} />\n          ),\n        }}\n      />\n    </Tabs.Navigator>\n  );\n};\n\nexport default () => {\n  return (\n    <NavigationContainer>\n      <Main />\n    </NavigationContainer>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}